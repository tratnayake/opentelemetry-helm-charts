---
# Source: opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: opentelemetry-collector/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scenario1-auth
data:
  access_token:
---
# Source: opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
data:
  relay: |
    exporters:
      logging: {}
      otlp:
        endpoint: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
        headers:
          lightstep-access-token: ${LS_ACCESS_TOKEN}
        insecure: ${OTEL_INSECURE}
        insecure_skip_verify: true
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_mib: 819
        spike_limit_mib: 256
      spanmetrics:
        dimensions:
        - name: http.method
        metrics_exporter: otlp
    receivers:
      generator:
        api:
          cors_allowed_origins:
          - '*'
          endpoint: 0.0.0.0:9999
        path: ${TOPO_FILE}
    service:
      pipelines:
        metrics:
          exporters:
          - otlp
          - logging
          processors:
          - batch
          receivers:
          - generator
        traces:
          exporters:
          - logging
          - otlp
          processors:
          - spanmetrics
          - batch
          receivers:
          - generator
---
# Source: opentelemetry-collector/templates/topo.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1
data:
  scenario.yaml: "topology:\n  services:\n    frontend:\n      tagSets:\n        - weight: 1\n          flag_set: frontend_errors\n          tags:\n            version: v127\n            error: true\n        - weight: 1\n          flag_unset: frontend_errors\n          tags:\n            version: v125\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 2048\n            limit:\n              cpu: 0.75\n              memory: 3072\n            usage:\n              cpu:\n                target: 0.5\n                jitter: 0.5\n              memory:\n                target: 0.6\n                jitter: 0.4\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-east-1\n\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 2048\n            limit:\n              cpu: 0.75\n              memory: 3072\n            restart:\n              every: 5m\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-2\n      routes:\n        /product:\n          downstreamCalls:\n            productcatalogservice: /GetProducts\n            recommendationservice: /GetRecommendations\n            adservice: /AdRequest\n          latencyConfigs:\n            - flag_set: frontend_errors\n              p0: 25ms\n              p50: 185ms\n              p95: 250ms\n              p99: 300ms\n              p99.9: 400ms\n              p100: 600ms\n            - p0: 25ms\n              p50: 75ms\n              p95: 100ms\n              p99: 120ms\n              p99.9: 150ms\n              p100: 200ms\n          tagSets:\n            - weight: 1\n              tags:\n                starter: charmander\n              tagGenerators:\n                - numTags: 50\n                  numVals: 3000\n                  valLength: 16\n            - weight: 1\n              tags:\n                starter: squirtle\n            - weight: 1\n              tags:\n                starter: bulbasaur\n        /cart:\n          downstreamCalls:\n            cartservice: /GetCart\n            recommendationservice: /GetRecommendations\n          latencyConfigs:\n            - p0: 25ms\n              p50: 75ms\n              p95: 100ms\n              p99: 120ms\n              p99.9: 150ms\n              p100: 200ms\n        /checkout:\n          downstreamCalls:\n            checkoutservice: /PlaceOrder\n          maxLatencyMillis: 800\n        /shipping:\n          downstreamCalls:\n            shippingservice: /GetQuote\n          maxLatencyMillis: 50\n        /currency:\n          downstreamCalls:\n            currencyservice: /GetConversion\n          maxLatencyMillis: 1500\n        /currency_slow:\n          downstreamCalls:\n            currencyservice: /DoSomethingSlow\n          flag_set: currencyservice_oom.phase_1\n          maxLatencyMillis: 3500\n    productcatalogservice:\n      tagSets:\n        - tags:\n            version: v52\n          inherit:\n            - region\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-2\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: azure\n            cloud.region: Central-US\n            host.type: t3.medium\n        - weight: 1\n          resourceAttrs:\n            cloud.provider: azure\n            cloud.region: West-US\n            host.type: t3.medium\n      routes:\n        /GetProducts:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n          tagSets:\n            - inherit:\n                - starter\n        /SearchProducts:\n          downstreamCalls: {}\n          tagSets:\n            - weight: 15\n              tags:\n                error: true\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 400\n    recommendationservice:\n      tagSets:\n        - tags:\n            version: v234\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-3\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-2\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-3\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-1\n      routes:\n        /GetRecommendations:\n          downstreamCalls:\n            productcatalogservice: /GetProducts\n          maxLatencyMillis: 200\n    cartservice:\n      tagSets:\n        - tags:\n            version: v5\n            region: us-east-1\n          flag_unset: runs_on_azure\n        - tags:\n            region: North_Central_US\n          flag_set: runs_on_azure\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-4\n            request:\n              cpu: 1\n              memory: 512\n            limit:\n              cpu: 2\n              memory: 1024\n          resourceAttrs:\n            host.name: cartservice-hostname\n      routes:\n        /GetCart:\n          downstreamCalls: {}\n          maxLatencyMillis: 200\n    checkoutservice:\n      tagSets:\n        - tags:\n            version: v37\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n      routes:\n        /PlaceOrder:\n          downstreamCalls:\n            paymentservice: /CreditCardInfo\n            shippingservice: /Address\n            currencyservice: /GetConversion\n            cartservice: /GetCart\n            emailservice: /SendOrderConfirmation\n          tagSets:\n            - weight: 25\n              tags:\n                error: true\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 500\n    paymentservice:\n      tagSets:\n        - tags:\n            version: v177\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-6\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: paymentservice-hostname\n      routes:\n        /ChargeRequest:\n          downstreamCalls:\n            paymentservice: /CreditCardInfo\n          maxLatencyMillis: 700\n        /CreditCardInfo:\n          downstreamCalls: {}\n          maxLatencyMillis: 50\n    shippingservice:\n      tagSets:\n        - tags:\n            version: v127\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-7\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: shippingservice-hostname\n      routes:\n        /GetQuote:\n          downstreamCalls:\n            shippingservice: /Address\n          maxLatencyMillis: 250\n        /ShipOrder:\n          downstreamCalls:\n            shippingservice: /Address\n          maxLatencyMillis: 500\n        /Address:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    emailservice:\n      tagSets:\n        - tags:\n            version: v27\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-8\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: emailservice-hostname\n      routes:\n        /SendOrderConfirmation:\n          downstreamCalls:\n            emailservice: /OrderResult\n          tagSets:\n            - weight: 15\n              tags:\n                error: true\n                service.version: v122\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 500\n        /OrderResult:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    currencyservice:\n      tagSets:\n        - tags:\n            version: v27\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-9\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: currencyservice-hostname\n      routes:\n        /GetConversion:\n          downstreamCalls:\n            currencyservice: /Money\n          maxLatencyMillis: 100\n        /Money:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n        /DoSomethingSlow:\n          downstreamCalls: {}\n          maxLatencyMillis: 4000\n          flag_set: currencyservice_oom.phase_1\n    adservice:\n      tagSets:\n        - version: v37\n          region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-10\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: adservice-hostname\n      routes:\n        /AdRequest:\n          downstreamCalls: {}\n          maxLatencyMillis: 500\n        /Ad:\n          downstreamCalls: {}\n          maxLatencyMillis: 500\n    iOS:\n      resourceAttrSets:\n        - weight: 1 \n          resourceAttrs:\n            instrument.name: lighstep\n            http.method: POST\n            customer: hipcore\n            client.platform: iOS \n      metrics:\n        - name: requests\n          type: Sum\n          max: 400\n          min: 0\n          period: 5m\n          shape: triangle\n      routes:\n        /api/make-payment:\n          downstreamCalls:\n            iOS: /api/submit-payment\n          maxLatencyMillis: 100\n        /api/submit-payment:\n          downstreamCalls:\n           iOS: /api/payment-status\n          maxLatencyMillis: 100\n        /api/payment-status:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    android:\n      resourceAttrs:\n        - weight: 1 \n          resourceAttrs:\n            instrument.name: lighstep\n            http.method: POST\n            customer: hipcore\n            client.platform: android\n      metrics:\n        - name: requests\n          type: Sum\n          max: 400\n          min: 0\n          period: 5m\n          shape: triangle\n      routes:\n        /api/make-payment:\n          downstreamCalls:\n            android: /api/submit-payment\n          maxLatencyMillis: 100\n        /api/submit-payment:\n          downstreamCalls:\n           android: /api/payment-status\n          maxLatencyMillis: 100\n        /api/payment-status:\n          downstreamCalls: {}\n          maxLatencyMillis: 100               \n\nflags:\n  # This is a cron-style flag\n  - name: frontend_errors\n    # use https://crontab.guru/\n    cron:\n      start: \"0,10,20,30,40,50 * * * *\"\n      end: \"5,15,25,35,45,55 * * * *\"\n  - name: runs_on_azure\n  - name: sev0_total_failure\n  - name: database_outage\n  # OOM on currency service + slower span latency from frontend -> currencyservice\n  - name: currencyservice_oom.default\n    incident:\n      parentFlag: currencyservice_fail\n      start: 0m\n      end: 10m\n  - name: currencyservice_oom.phase_1\n    incident:\n      parentFlag: currencyservice_fail\n      start: 0m\n      end: 10m\n  - name: currencyservice_oom.phase_2\n    incident:\n      parentFlag: currencyservice_fail\n      start: 3m\n      end: 10m\n  - name: frontend_doom\n    cron:\n      start: \"57,12,27,42 * * * *\"\n      end: \"10,25,40,55 * * * *\"\n  # This is an incident-style flag; start and end are relative to incident start\n  - name: frontend_doom.phase_1\n    incident:\n      parentFlag: frontend_doom\n      start: 0m\n      end: 10m\n  - name: frontend_doom.phase_2\n    incident:\n      parentFlag: frontend_doom\n      start: 5m\n      # with no end, lasts until the incident finishes\n  - name: currencyservice_fail\n    cron:\n      start: \"57,12,27,42 * * * *\"\n      end: \"10,25,40,55 * * * *\"\n\nrootRoutes:\n  - service: frontend\n    route: /product\n    tracesPerHour: 2880\n  - service: frontend\n    route: /cart\n    tracesPerHour: 1400\n  - service: frontend\n    route: /shipping\n    tracesPerHour: 480\n  - service: frontend\n    route: /currency\n    tracesPerHour: 200\n  - service: frontend\n    route: /checkout\n    tracesPerHour: 480\n  - service: iOS\n    route: /api/make-payment\n    tracesPerHour: 480\n  - service: android  \n    route: /api/make-payment\n    tracesPerHour: 480"
  # scenario.yaml: ""
---
# Source: opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
    component: standalone-collector
spec:
  type: ClusterIP
  ports: 
    
    - name: otlp
      port: 4317
      targetPort: otlp
      protocol: TCP
  selector:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    component: standalone-collector
---
# Source: opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: scenario1
      component: standalone-collector
  template:
    metadata:
      annotations:
        checksum/config: 54b1527fb9d9b3a2809d077701ffe362696191cb21346291d6f74beb48c348c4
        
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: scenario1
        component: standalone-collector
        
    spec:
      
      serviceAccountName: scenario1-opentelemetry-collector
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          command:
            - /otel/telemetry-generator
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "gcr.io/terraform-shop-public/telemetry-generator:0.0.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: otlp
              containerPort: 4317
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: LS_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: access_token
                  name: scenario1-auth
            - name: TOPO_FILE
              value: /etc/otel/scenario.yaml
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: ingest.staging.lightstep.com:443
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
            - mountPath: /etc/otel
              name: topo-volume
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: scenario1-opentelemetry-collector
            items:
              - key: relay
                path: relay.yaml
        - configMap:
            items:
            - key: scenario.yaml
              path: scenario.yaml
            name: scenario1
          name: topo-volume
---
# Source: opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: opentelemetry-collector/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scenario1-auth
data:
  access_token:
---
# Source: opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
data:
  relay: |
    exporters:
      logging: {}
      otlp:
        endpoint: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
        headers:
          lightstep-access-token: ${LS_ACCESS_TOKEN}
        insecure: ${OTEL_INSECURE}
        insecure_skip_verify: true
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_mib: 819
        spike_limit_mib: 256
      spanmetrics:
        dimensions:
        - name: http.method
        metrics_exporter: otlp
    receivers:
      generator:
        api:
          cors_allowed_origins:
          - '*'
          endpoint: 0.0.0.0:9999
        path: ${TOPO_FILE}
    service:
      pipelines:
        metrics:
          exporters:
          - otlp
          - logging
          processors:
          - batch
          receivers:
          - generator
        traces:
          exporters:
          - logging
          - otlp
          processors:
          - spanmetrics
          - batch
          receivers:
          - generator
---
# Source: opentelemetry-collector/templates/topo.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1
data:
  scenario.yaml: ""
  # scenario.yaml: "topology:\n  services:\n    frontend:\n      tagSets:\n        - weight: 1\n          flag_set: frontend_errors\n          tags:\n            version: v127\n            error: true\n        - weight: 1\n          flag_unset: frontend_errors\n          tags:\n            version: v125\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 2048\n            limit:\n              cpu: 0.75\n              memory: 3072\n            usage:\n              cpu:\n                target: 0.5\n                jitter: 0.5\n              memory:\n                target: 0.6\n                jitter: 0.4\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-east-1\n\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 2048\n            limit:\n              cpu: 0.75\n              memory: 3072\n            restart:\n              every: 5m\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-2\n      routes:\n        /product:\n          downstreamCalls:\n            productcatalogservice: /GetProducts\n            recommendationservice: /GetRecommendations\n            adservice: /AdRequest\n          latencyConfigs:\n            - flag_set: frontend_errors\n              p0: 25ms\n              p50: 185ms\n              p95: 250ms\n              p99: 300ms\n              p99.9: 400ms\n              p100: 600ms\n            - p0: 25ms\n              p50: 75ms\n              p95: 100ms\n              p99: 120ms\n              p99.9: 150ms\n              p100: 200ms\n          tagSets:\n            - weight: 1\n              tags:\n                starter: charmander\n              tagGenerators:\n                - numTags: 50\n                  numVals: 3000\n                  valLength: 16\n            - weight: 1\n              tags:\n                starter: squirtle\n            - weight: 1\n              tags:\n                starter: bulbasaur\n        /cart:\n          downstreamCalls:\n            cartservice: /GetCart\n            recommendationservice: /GetRecommendations\n          latencyConfigs:\n            - p0: 25ms\n              p50: 75ms\n              p95: 100ms\n              p99: 120ms\n              p99.9: 150ms\n              p100: 200ms\n        /checkout:\n          downstreamCalls:\n            checkoutservice: /PlaceOrder\n          maxLatencyMillis: 800\n        /shipping:\n          downstreamCalls:\n            shippingservice: /GetQuote\n          maxLatencyMillis: 50\n        /currency:\n          downstreamCalls:\n            currencyservice: /GetConversion\n          maxLatencyMillis: 1500\n        /currency_slow:\n          downstreamCalls:\n            currencyservice: /DoSomethingSlow\n          flag_set: currencyservice_oom.phase_1\n          maxLatencyMillis: 3500\n    productcatalogservice:\n      tagSets:\n        - tags:\n            version: v52\n          inherit:\n            - region\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-2\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: azure\n            cloud.region: Central-US\n            host.type: t3.medium\n        - weight: 1\n          resourceAttrs:\n            cloud.provider: azure\n            cloud.region: West-US\n            host.type: t3.medium\n      routes:\n        /GetProducts:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n          tagSets:\n            - inherit:\n                - starter\n        /SearchProducts:\n          downstreamCalls: {}\n          tagSets:\n            - weight: 15\n              tags:\n                error: true\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 400\n    recommendationservice:\n      tagSets:\n        - tags:\n            version: v234\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-3\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-2\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-3\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-1\n      routes:\n        /GetRecommendations:\n          downstreamCalls:\n            productcatalogservice: /GetProducts\n          maxLatencyMillis: 200\n    cartservice:\n      tagSets:\n        - tags:\n            version: v5\n            region: us-east-1\n          flag_unset: runs_on_azure\n        - tags:\n            region: North_Central_US\n          flag_set: runs_on_azure\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-4\n            request:\n              cpu: 1\n              memory: 512\n            limit:\n              cpu: 2\n              memory: 1024\n          resourceAttrs:\n            host.name: cartservice-hostname\n      routes:\n        /GetCart:\n          downstreamCalls: {}\n          maxLatencyMillis: 200\n    checkoutservice:\n      tagSets:\n        - tags:\n            version: v37\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n      routes:\n        /PlaceOrder:\n          downstreamCalls:\n            paymentservice: /CreditCardInfo\n            shippingservice: /Address\n            currencyservice: /GetConversion\n            cartservice: /GetCart\n            emailservice: /SendOrderConfirmation\n          tagSets:\n            - weight: 25\n              tags:\n                error: true\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 500\n    paymentservice:\n      tagSets:\n        - tags:\n            version: v177\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-6\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: paymentservice-hostname\n      routes:\n        /ChargeRequest:\n          downstreamCalls:\n            paymentservice: /CreditCardInfo\n          maxLatencyMillis: 700\n        /CreditCardInfo:\n          downstreamCalls: {}\n          maxLatencyMillis: 50\n    shippingservice:\n      tagSets:\n        - tags:\n            version: v127\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-7\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: shippingservice-hostname\n      routes:\n        /GetQuote:\n          downstreamCalls:\n            shippingservice: /Address\n          maxLatencyMillis: 250\n        /ShipOrder:\n          downstreamCalls:\n            shippingservice: /Address\n          maxLatencyMillis: 500\n        /Address:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    emailservice:\n      tagSets:\n        - tags:\n            version: v27\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-8\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: emailservice-hostname\n      routes:\n        /SendOrderConfirmation:\n          downstreamCalls:\n            emailservice: /OrderResult\n          tagSets:\n            - weight: 15\n              tags:\n                error: true\n                service.version: v122\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 500\n        /OrderResult:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    currencyservice:\n      tagSets:\n        - tags:\n            version: v27\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-9\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: currencyservice-hostname\n      routes:\n        /GetConversion:\n          downstreamCalls:\n            currencyservice: /Money\n          maxLatencyMillis: 100\n        /Money:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n        /DoSomethingSlow:\n          downstreamCalls: {}\n          maxLatencyMillis: 4000\n          flag_set: currencyservice_oom.phase_1\n    adservice:\n      tagSets:\n        - version: v37\n          region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-10\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: adservice-hostname\n      routes:\n        /AdRequest:\n          downstreamCalls: {}\n          maxLatencyMillis: 500\n        /Ad:\n          downstreamCalls: {}\n          maxLatencyMillis: 500\n    iOS:\n      resourceAttrSets:\n        - weight: 1 \n          resourceAttrs:\n            instrument.name: lighstep\n            http.method: POST\n            customer: hipcore\n            client.platform: iOS \n      metrics:\n        - name: requests\n          type: Sum\n          max: 400\n          min: 0\n          period: 5m\n          shape: triangle\n      routes:\n        /api/make-payment:\n          downstreamCalls:\n            iOS: /api/submit-payment\n          maxLatencyMillis: 100\n        /api/submit-payment:\n          downstreamCalls:\n           iOS: /api/payment-status\n          maxLatencyMillis: 100\n        /api/payment-status:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    android:\n      resourceAttrs:\n        - weight: 1 \n          resourceAttrs:\n            instrument.name: lighstep\n            http.method: POST\n            customer: hipcore\n            client.platform: android\n      metrics:\n        - name: requests\n          type: Sum\n          max: 400\n          min: 0\n          period: 5m\n          shape: triangle\n      routes:\n        /api/make-payment:\n          downstreamCalls:\n            android: /api/submit-payment\n          maxLatencyMillis: 100\n        /api/submit-payment:\n          downstreamCalls:\n           android: /api/payment-status\n          maxLatencyMillis: 100\n        /api/payment-status:\n          downstreamCalls: {}\n          maxLatencyMillis: 100               \n\nflags:\n  # This is a cron-style flag\n  - name: frontend_errors\n    # use https://crontab.guru/\n    cron:\n      start: \"0,10,20,30,40,50 * * * *\"\n      end: \"5,15,25,35,45,55 * * * *\"\n  - name: runs_on_azure\n  - name: sev0_total_failure\n  - name: database_outage\n  # OOM on currency service + slower span latency from frontend -> currencyservice\n  - name: currencyservice_oom.default\n    incident:\n      parentFlag: currencyservice_fail\n      start: 0m\n      end: 10m\n  - name: currencyservice_oom.phase_1\n    incident:\n      parentFlag: currencyservice_fail\n      start: 0m\n      end: 10m\n  - name: currencyservice_oom.phase_2\n    incident:\n      parentFlag: currencyservice_fail\n      start: 3m\n      end: 10m\n  - name: frontend_doom\n    cron:\n      start: \"57,12,27,42 * * * *\"\n      end: \"10,25,40,55 * * * *\"\n  # This is an incident-style flag; start and end are relative to incident start\n  - name: frontend_doom.phase_1\n    incident:\n      parentFlag: frontend_doom\n      start: 0m\n      end: 10m\n  - name: frontend_doom.phase_2\n    incident:\n      parentFlag: frontend_doom\n      start: 5m\n      # with no end, lasts until the incident finishes\n  - name: currencyservice_fail\n    cron:\n      start: \"57,12,27,42 * * * *\"\n      end: \"10,25,40,55 * * * *\"\n\nrootRoutes:\n  - service: frontend\n    route: /product\n    tracesPerHour: 2880\n  - service: frontend\n    route: /cart\n    tracesPerHour: 1400\n  - service: frontend\n    route: /shipping\n    tracesPerHour: 480\n  - service: frontend\n    route: /currency\n    tracesPerHour: 200\n  - service: frontend\n    route: /checkout\n    tracesPerHour: 480\n  - service: iOS\n    route: /api/make-payment\n    tracesPerHour: 480\n  - service: android  \n    route: /api/make-payment\n    tracesPerHour: 480"
  # scenario.yaml: ""
---
# Source: opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
    component: standalone-collector
spec:
  type: ClusterIP
  ports: 
    
    - name: otlp
      port: 4317
      targetPort: otlp
      protocol: TCP
  selector:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    component: standalone-collector
---
# Source: opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: scenario1
      component: standalone-collector
  template:
    metadata:
      annotations:
        checksum/config: 54b1527fb9d9b3a2809d077701ffe362696191cb21346291d6f74beb48c348c4
        
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: scenario1
        component: standalone-collector
        
    spec:
      
      serviceAccountName: scenario1-opentelemetry-collector
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          command:
            - /otel/telemetry-generator
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "gcr.io/terraform-shop-public/telemetry-generator:0.0.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: otlp
              containerPort: 4317
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: LS_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: access_token
                  name: scenario1-auth
            - name: TOPO_FILE
              value: /etc/otel/scenario.yaml
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: ingest.staging.lightstep.com:443
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
            - mountPath: /etc/otel
              name: topo-volume
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: scenario1-opentelemetry-collector
            items:
              - key: relay
                path: relay.yaml
        - configMap:
            items:
            - key: scenario.yaml
              path: scenario.yaml
            name: scenario1
          name: topo-volume
---
# Source: opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: opentelemetry-collector/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scenario1-auth
data:
  access_token:
---
# Source: opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
data:
  relay: |
    exporters:
      logging: {}
      otlp:
        endpoint: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
        headers:
          lightstep-access-token: ${LS_ACCESS_TOKEN}
        insecure: ${OTEL_INSECURE}
        insecure_skip_verify: true
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_mib: 819
        spike_limit_mib: 256
      spanmetrics:
        dimensions:
        - name: http.method
        metrics_exporter: otlp
    receivers:
      generator:
        api:
          cors_allowed_origins:
          - '*'
          endpoint: 0.0.0.0:9999
        path: ${TOPO_FILE}
    service:
      pipelines:
        metrics:
          exporters:
          - otlp
          - logging
          processors:
          - batch
          receivers:
          - generator
        traces:
          exporters:
          - logging
          - otlp
          processors:
          - spanmetrics
          - batch
          receivers:
          - generator
---
# Source: opentelemetry-collector/templates/topo.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1
data:
  scenario.yaml: ""
  # scenario.yaml: "topology:\n  services:\n    frontend:\n      tagSets:\n        - weight: 1\n          flag_set: frontend_errors\n          tags:\n            version: v127\n            error: true\n        - weight: 1\n          flag_unset: frontend_errors\n          tags:\n            version: v125\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 2048\n            limit:\n              cpu: 0.75\n              memory: 3072\n            usage:\n              cpu:\n                target: 0.5\n                jitter: 0.5\n              memory:\n                target: 0.6\n                jitter: 0.4\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-east-1\n\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 2048\n            limit:\n              cpu: 0.75\n              memory: 3072\n            restart:\n              every: 5m\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-2\n      routes:\n        /product:\n          downstreamCalls:\n            productcatalogservice: /GetProducts\n            recommendationservice: /GetRecommendations\n            adservice: /AdRequest\n          latencyConfigs:\n            - flag_set: frontend_errors\n              p0: 25ms\n              p50: 185ms\n              p95: 250ms\n              p99: 300ms\n              p99.9: 400ms\n              p100: 600ms\n            - p0: 25ms\n              p50: 75ms\n              p95: 100ms\n              p99: 120ms\n              p99.9: 150ms\n              p100: 200ms\n          tagSets:\n            - weight: 1\n              tags:\n                starter: charmander\n              tagGenerators:\n                - numTags: 50\n                  numVals: 3000\n                  valLength: 16\n            - weight: 1\n              tags:\n                starter: squirtle\n            - weight: 1\n              tags:\n                starter: bulbasaur\n        /cart:\n          downstreamCalls:\n            cartservice: /GetCart\n            recommendationservice: /GetRecommendations\n          latencyConfigs:\n            - p0: 25ms\n              p50: 75ms\n              p95: 100ms\n              p99: 120ms\n              p99.9: 150ms\n              p100: 200ms\n        /checkout:\n          downstreamCalls:\n            checkoutservice: /PlaceOrder\n          maxLatencyMillis: 800\n        /shipping:\n          downstreamCalls:\n            shippingservice: /GetQuote\n          maxLatencyMillis: 50\n        /currency:\n          downstreamCalls:\n            currencyservice: /GetConversion\n          maxLatencyMillis: 1500\n        /currency_slow:\n          downstreamCalls:\n            currencyservice: /DoSomethingSlow\n          flag_set: currencyservice_oom.phase_1\n          maxLatencyMillis: 3500\n    productcatalogservice:\n      tagSets:\n        - tags:\n            version: v52\n          inherit:\n            - region\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-2\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: azure\n            cloud.region: Central-US\n            host.type: t3.medium\n        - weight: 1\n          resourceAttrs:\n            cloud.provider: azure\n            cloud.region: West-US\n            host.type: t3.medium\n      routes:\n        /GetProducts:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n          tagSets:\n            - inherit:\n                - starter\n        /SearchProducts:\n          downstreamCalls: {}\n          tagSets:\n            - weight: 15\n              tags:\n                error: true\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 400\n    recommendationservice:\n      tagSets:\n        - tags:\n            version: v234\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-3\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-2\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-3\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            cloud.provider: aws\n            cloud.region: us-west-1\n      routes:\n        /GetRecommendations:\n          downstreamCalls:\n            productcatalogservice: /GetProducts\n          maxLatencyMillis: 200\n    cartservice:\n      tagSets:\n        - tags:\n            version: v5\n            region: us-east-1\n          flag_unset: runs_on_azure\n        - tags:\n            region: North_Central_US\n          flag_set: runs_on_azure\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-4\n            request:\n              cpu: 1\n              memory: 512\n            limit:\n              cpu: 2\n              memory: 1024\n          resourceAttrs:\n            host.name: cartservice-hostname\n      routes:\n        /GetCart:\n          downstreamCalls: {}\n          maxLatencyMillis: 200\n    checkoutservice:\n      tagSets:\n        - tags:\n            version: v37\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-1\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n      routes:\n        /PlaceOrder:\n          downstreamCalls:\n            paymentservice: /CreditCardInfo\n            shippingservice: /Address\n            currencyservice: /GetConversion\n            cartservice: /GetCart\n            emailservice: /SendOrderConfirmation\n          tagSets:\n            - weight: 25\n              tags:\n                error: true\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 500\n    paymentservice:\n      tagSets:\n        - tags:\n            version: v177\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-6\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: paymentservice-hostname\n      routes:\n        /ChargeRequest:\n          downstreamCalls:\n            paymentservice: /CreditCardInfo\n          maxLatencyMillis: 700\n        /CreditCardInfo:\n          downstreamCalls: {}\n          maxLatencyMillis: 50\n    shippingservice:\n      tagSets:\n        - tags:\n            version: v127\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-7\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: shippingservice-hostname\n      routes:\n        /GetQuote:\n          downstreamCalls:\n            shippingservice: /Address\n          maxLatencyMillis: 250\n        /ShipOrder:\n          downstreamCalls:\n            shippingservice: /Address\n          maxLatencyMillis: 500\n        /Address:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    emailservice:\n      tagSets:\n        - tags:\n            version: v27\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-8\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: emailservice-hostname\n      routes:\n        /SendOrderConfirmation:\n          downstreamCalls:\n            emailservice: /OrderResult\n          tagSets:\n            - weight: 15\n              tags:\n                error: true\n                service.version: v122\n                http.status_code: 503\n            - weight: 85\n              tags: {}\n          maxLatencyMillis: 500\n        /OrderResult:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    currencyservice:\n      tagSets:\n        - tags:\n            version: v27\n            region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-9\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: currencyservice-hostname\n      routes:\n        /GetConversion:\n          downstreamCalls:\n            currencyservice: /Money\n          maxLatencyMillis: 100\n        /Money:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n        /DoSomethingSlow:\n          downstreamCalls: {}\n          maxLatencyMillis: 4000\n          flag_set: currencyservice_oom.phase_1\n    adservice:\n      tagSets:\n        - version: v37\n          region: us-east-1\n      resourceAttrSets:\n        - weight: 1\n          kubernetes:\n            cluster_name: k8s-cluster-10\n            request:\n              cpu: 0.5\n              memory: 512\n            limit:\n              cpu: 1\n              memory: 1024\n          resourceAttrs:\n            host.name: adservice-hostname\n      routes:\n        /AdRequest:\n          downstreamCalls: {}\n          maxLatencyMillis: 500\n        /Ad:\n          downstreamCalls: {}\n          maxLatencyMillis: 500\n    iOS:\n      resourceAttrSets:\n        - weight: 1 \n          resourceAttrs:\n            instrument.name: lighstep\n            http.method: POST\n            customer: hipcore\n            client.platform: iOS \n      metrics:\n        - name: requests\n          type: Sum\n          max: 400\n          min: 0\n          period: 5m\n          shape: triangle\n      routes:\n        /api/make-payment:\n          downstreamCalls:\n            iOS: /api/submit-payment\n          maxLatencyMillis: 100\n        /api/submit-payment:\n          downstreamCalls:\n           iOS: /api/payment-status\n          maxLatencyMillis: 100\n        /api/payment-status:\n          downstreamCalls: {}\n          maxLatencyMillis: 100\n    android:\n      resourceAttrs:\n        - weight: 1 \n          resourceAttrs:\n            instrument.name: lighstep\n            http.method: POST\n            customer: hipcore\n            client.platform: android\n      metrics:\n        - name: requests\n          type: Sum\n          max: 400\n          min: 0\n          period: 5m\n          shape: triangle\n      routes:\n        /api/make-payment:\n          downstreamCalls:\n            android: /api/submit-payment\n          maxLatencyMillis: 100\n        /api/submit-payment:\n          downstreamCalls:\n           android: /api/payment-status\n          maxLatencyMillis: 100\n        /api/payment-status:\n          downstreamCalls: {}\n          maxLatencyMillis: 100               \n\nflags:\n  # This is a cron-style flag\n  - name: frontend_errors\n    # use https://crontab.guru/\n    cron:\n      start: \"0,10,20,30,40,50 * * * *\"\n      end: \"5,15,25,35,45,55 * * * *\"\n  - name: runs_on_azure\n  - name: sev0_total_failure\n  - name: database_outage\n  # OOM on currency service + slower span latency from frontend -> currencyservice\n  - name: currencyservice_oom.default\n    incident:\n      parentFlag: currencyservice_fail\n      start: 0m\n      end: 10m\n  - name: currencyservice_oom.phase_1\n    incident:\n      parentFlag: currencyservice_fail\n      start: 0m\n      end: 10m\n  - name: currencyservice_oom.phase_2\n    incident:\n      parentFlag: currencyservice_fail\n      start: 3m\n      end: 10m\n  - name: frontend_doom\n    cron:\n      start: \"57,12,27,42 * * * *\"\n      end: \"10,25,40,55 * * * *\"\n  # This is an incident-style flag; start and end are relative to incident start\n  - name: frontend_doom.phase_1\n    incident:\n      parentFlag: frontend_doom\n      start: 0m\n      end: 10m\n  - name: frontend_doom.phase_2\n    incident:\n      parentFlag: frontend_doom\n      start: 5m\n      # with no end, lasts until the incident finishes\n  - name: currencyservice_fail\n    cron:\n      start: \"57,12,27,42 * * * *\"\n      end: \"10,25,40,55 * * * *\"\n\nrootRoutes:\n  - service: frontend\n    route: /product\n    tracesPerHour: 2880\n  - service: frontend\n    route: /cart\n    tracesPerHour: 1400\n  - service: frontend\n    route: /shipping\n    tracesPerHour: 480\n  - service: frontend\n    route: /currency\n    tracesPerHour: 200\n  - service: frontend\n    route: /checkout\n    tracesPerHour: 480\n  - service: iOS\n    route: /api/make-payment\n    tracesPerHour: 480\n  - service: android  \n    route: /api/make-payment\n    tracesPerHour: 480"
  # scenario.yaml: ""
---
# Source: opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
    component: standalone-collector
spec:
  type: ClusterIP
  ports: 
    
    - name: otlp
      port: 4317
      targetPort: otlp
      protocol: TCP
  selector:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    component: standalone-collector
---
# Source: opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: scenario1
      component: standalone-collector
  template:
    metadata:
      annotations:
        checksum/config: 54b1527fb9d9b3a2809d077701ffe362696191cb21346291d6f74beb48c348c4
        
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: scenario1
        component: standalone-collector
        
    spec:
      
      serviceAccountName: scenario1-opentelemetry-collector
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          command:
            - /otel/telemetry-generator
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "gcr.io/terraform-shop-public/telemetry-generator:0.0.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: otlp
              containerPort: 4317
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: LS_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: access_token
                  name: scenario1-auth
            - name: TOPO_FILE
              value: /etc/otel/scenario.yaml
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: ingest.staging.lightstep.com:443
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
            - mountPath: /etc/otel
              name: topo-volume
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: scenario1-opentelemetry-collector
            items:
              - key: relay
                path: relay.yaml
        - configMap:
            items:
            - key: scenario.yaml
              path: scenario.yaml
            name: scenario1
          name: topo-volume
