helm template --debug  -f values.yaml --set "access_token=S_ACCESS_TOKEN" scenario1 ./
---
# Source: opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: opentelemetry-collector/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scenario1-auth
data:
  access_token: U19BQ0NFU1NfVE9LRU4=
---
# Source: opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
data:
  relay: |
    exporters:
      logging: {}
      otlp:
        endpoint: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
        headers:
          lightstep-access-token: ${LS_ACCESS_TOKEN}
        insecure: ${OTEL_INSECURE}
        insecure_skip_verify: true
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_mib: 819
        spike_limit_mib: 256
      spanmetrics:
        dimensions:
        - name: http.method
        metrics_exporter: otlp
    receivers:
      generator:
        api:
          cors_allowed_origins:
          - '*'
          endpoint: 0.0.0.0:9999
        path: /etc/otel/scenarios/${TOPO_FILENAME}.yaml
    service:
      pipelines:
        metrics:
          exporters:
          - otlp
          - logging
          processors:
          - batch
          receivers:
          - generator
        traces:
          exporters:
          - logging
          - otlp
          processors:
          - spanmetrics
          - batch
          receivers:
          - generator
---
# Source: opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
    component: standalone-collector
spec:
  type: ClusterIP
  ports: 
    
    - name: otlp
      port: 4317
      targetPort: otlp
      protocol: TCP
  selector:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    component: standalone-collector
---
# Source: opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scenario1-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.28.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: scenario1
    app.kubernetes.io/version: "0.58.0"
    app.kubernetes.io/managed-by: Helm
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: scenario1
      component: standalone-collector
  template:
    metadata:
      annotations:
        checksum/config: 483d08091b03d3828e948b0b7f93e4be3c7222b727061a38836ad6dcbab8f3d2
        
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: scenario1
        component: standalone-collector
        
    spec:
      
      serviceAccountName: scenario1-opentelemetry-collector
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          command:
            - /otel/telemetry-generator
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "gcr.io/terraform-shop-public/telemetry-generator:0.0.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: otlp
              containerPort: 4317
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: LS_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: access_token
                  name: scenario1-auth
            - name: TOPO_FILENAME
              value: ""
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: ingest.staging.lightstep.com:443
          
          resources:
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: scenario1-opentelemetry-collector
            items:
              - key: relay
                path: relay.yaml
